#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Time    : 12/10/2019 6:14 PM
# Author  : BLKStone
# Site    : http://wp.blkstone.me
# File    : http_listener.py.py
# Software:  PyCharm

from http.server import HTTPServer, BaseHTTPRequestHandler
from io import BytesIO


# Reference
# https://blog.anvileight.com/posts/simple-python-http-server/
# https://gist.github.com/bradmontgomery/2219997
# https://github.com/python/cpython/blob/master/Lib/http/server.py


class HTTPListenerHandler(BaseHTTPRequestHandler):

    def _set_headers(self):
        self.send_response(200)
        self.send_header('Content-type', 'text/html')
        self.end_headers()

    def _html(self, message):
        """
        This just generates an HTML document that includes `message`
        in the body. Override, or re-write this do do more interesting stuff.
        """
        content = f"<html><body><h1>{message}</h1></body></html>"
        # NOTE: must return a bytes object!
        return content.encode("utf8")

    def _make_response(self, text):
        response = BytesIO()
        response.write(text.encode("utf8"))
        self.wfile.write(response.getvalue())

    def _view_response(self):
        text = """< HTTP/1.0 200 OK
< Server: BaseHTTP/0.6 Python/3.6.8
< Date: {date_str}
< Content-type: text/html""".format(date_str=self.date_time_string())

        print(text)

    def _echo_request(self):
        splitter = "---------------------------------------------------------------------------------------------------"
        print(splitter)
        print(self.raw_requestline.decode("utf-8").strip())
        print(self.headers)
        length = int(self.headers.get('Content-length', 0))
        request_body = self.rfile.read(length).decode()
        print(request_body)

    def _do_request(self):
        self._echo_request()
        message = "Hello, World!"
        self._set_headers()
        self._make_response(message)
        self._view_response()

    def do_GET(self):
        self._do_request()

    def do_POST(self):
        self._do_request()

    def do_HEAD(self):
        self._do_request()

    def do_PUT(self):
        self._do_request()

    def do_OPTIONS(self):
        self._do_request()


def main():
    PORT = 8080

    # import socketserver
    # with socketserver.TCPServer(("", PORT), HTTPListenerHandler) as httpd:
    #     print("serving at port", PORT)
    #     httpd.serve_forever()

    with HTTPServer(("", PORT), HTTPListenerHandler) as httpd:
        print("serving at port", PORT)
        httpd.serve_forever()


if __name__ == '__main__':
    main()
